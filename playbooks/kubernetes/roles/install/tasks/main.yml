---
- name: Adding Kubernetes GPG apt-key
  apt_key:
    id: "{{ kubernetes_gpg }}"
    url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    state: present

- name: Adding kubernetes repository
  apt_repository:
    repo: "deb https://apt.kubernetes.io/ {{ kubernetes_repository }} main"
    state: present

- name: Updating apt
  apt:
    update_cache: yes

- name: Installing ipvsadm
  apt:
    name: "ipvsadm"
    state: present

- name: Installing ifupdown
  apt:
    name: "ifupdown"
    state: present

- name: Installing netscript-2.4
  apt:
    name: "netscript-2.4"
    state: present

- name: Checking if kubectl is already installed
  shell: "apt-cache policy kubectl | grep Installed: | awk '{print $2}'"
  register: command_output

- name: Installing kubectl
  apt:
    name: "kubectl={{ kubectl_version }}"
    state: present
  when: command_output.stdout == '(none)'

- name: Checking if kubelet is already installed
  shell: "apt-cache policy kubelet | grep Installed: | awk '{print $2}'"
  register: command_output

- name: Installing kubelet
  apt:
    name: "kubelet={{ kubelet_version }}"
    state: present
  when: command_output.stdout == '(none)'

- name: Checking if kubeadm is already installed
  shell: "apt-cache policy kubeadm | grep Installed: | awk '{print $2}'"
  register: command_output

- name: Installing kubeadm
  apt:
    name: "kubeadm={{ kubeadm_version }}"
    state: present
  when: command_output.stdout == '(none)'

# Prevent kubectl from being upgraded.
- dpkg_selections:
    name: kubectl
    selection: hold

# Prevent kubelet from being upgraded.
- dpkg_selections:
    name: kubelet
    selection: hold

# Prevent kubeadm from being upgraded.
- dpkg_selections:
    name: kubeadm
    selection: hold
