---
- name: Getting admin config from master
  shell: "cat /etc/kubernetes/admin.conf"
  register: K8S_ADMIN_CONFIG
  when: "'masters' in group_names"

- name: Register dummy host with variable
  add_host:
    name: "k8s_config_host"
    K8S_ADMIN_CONFIG: "{{ K8S_ADMIN_CONFIG.stdout }}"
  when: "'masters' in group_names"

- name: Adding config file to slave node
  shell: "echo '{{ hostvars['k8s_config_host']['K8S_ADMIN_CONFIG'] }}' > /etc/kubernetes/admin.conf"
  when: "'slaves' in group_names"

- name: Creating a copy of the config file
  shell: "cp /etc/kubernetes/admin.conf /tmp/admin.conf"
  when: "'slaves' in group_names"

- name: Draining the slave node
  shell: "kubectl drain {{ inventory_hostname_short }} --delete-local-data --ignore-daemonsets --force --kubeconfig /etc/kubernetes/admin.conf"
  register: kubectl_drain
  when: "'slaves' in group_names"

- name: Running kubeadm reset on node
  command: 'kubeadm reset -f'
  register: kubeadm_reset
  when:
    - kubectl_drain is succeeded
    - "'slaves' in group_names"

- name: Reset iptables
  command: "{{ item }}"
  with_items: 
    - 'iptables -F'
    - 'iptables -t nat -F'
    - 'iptables -t mangle -F'
    - 'iptables -X'
    - 'ipvsadm -C'
  when: "'slaves' in group_names"

- name: Running kubectl delete node
  command: "kubectl delete node {{ inventory_hostname_short }} --kubeconfig /tmp/admin.conf"
  when:
    - kubeadm_reset is succeeded
    - "'slaves' in group_names"
